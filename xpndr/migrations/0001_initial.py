# Generated by Django 3.1.3 on 2021-08-18 19:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Satellite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satellite', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Transponder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transponder', models.CharField(choices=[('C', 'C'), ('EXTC', 'EXTC'), ('KU', 'KU'), ('KA', 'KA')], default='C', max_length=50)),
                ('transponder_number', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField(verbose_name='Time (HH:MM:SS)')),
                ('frequency', models.CharField(blank=True, max_length=100, verbose_name='Affected frequency & Bandwidth (MHz)')),
                ('user_detail', models.CharField(blank=True, max_length=200, verbose_name='User Detail')),
                ('complaint_type', models.CharField(choices=[('Interference', 'Interference'), ('Signal Degradation', 'Signal_Degradation'), ('Overdrive', 'Overdrive'), ('Sat Anamoly', 'Sat Anamoly')], default='Interference', max_length=50)),
                ('impact', models.TextField(blank=True, verbose_name='Impact on user link')),
                ('issue_time', models.DateTimeField(blank=True, verbose_name='Issue Start Date & Time ')),
                ('ticket', models.CharField(blank=True, max_length=50)),
                ('helix_dc', models.CharField(blank=True, max_length=50, verbose_name='Helix Current/DC Input Power')),
                ('operating_point', models.CharField(blank=True, choices=[('P', 'P'), ('P-1', 'P-1'), ('P-2', 'P-2'), ('P-3', 'P-3'), ('P-4', 'P-4'), ('P-5', 'P-5'), ('P-6', 'P-6'), ('P-7', 'P-7'), ('P-8', 'P-8'), ('P-10', 'P-10'), ('P-11', 'P-11'), ('P-12', 'P-12'), ('P-13', 'P-13'), ('P-14', 'P-14'), ('P-15', 'P-15'), ('P-16', 'P-16'), ('P-17', 'P-17'), ('P-18', 'P-18'), ('P-19', 'P-19'), ('P-20', 'P-20'), ('P-21', 'P-21'), ('P-22', 'P-22'), ('P-23', 'P-23'), ('P-24', 'P-24')], default='P-3', max_length=100)),
                ('bandwidth', models.CharField(blank=True, max_length=100, verbose_name='Frequency and Bandwidth of Interference')),
                ('priority', models.CharField(blank=True, choices=[('High Priority', 'Highest_Priority'), ('Priority', 'Priority'), ('Normal', 'Normal')], default='Normal', max_length=50)),
                ('details', models.TextField(verbose_name='Details of Interference/issue')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('upload', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('slug', models.SlugField(blank=True, max_length=250, unique_for_date='publish')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('satellite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='xpndr.satellite')),
                ('transponder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='xpndr.transponder')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.profile')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
    ]
